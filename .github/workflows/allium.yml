name: allium

permissions:
  contents: write

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package common --package alliumd --package allium-launcher --package allium-menu

  deny:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - uses: actions/checkout@v4
    - uses: EmbarkStudios/cargo-deny-action@v2
      with:
        command: check ${{ matrix.checks }}

  create-release:
    name: deploy
    needs: [style, test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [ arm-unknown-linux-gnueabihf ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --bins --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          make all
          cd dist
          zip -r ../allium-${{ matrix.target }}.zip .allium .tmp_update RetroArch Apps BIOS Roms Saves
          cd -
          
      - name: Publish
        uses: softprops/action-gh-release@v1
        # TODO: if any of the build step fails, the release should be deleted.
        with:
            # UPDATEME: Replace "rust-ci" with your binary name but keep the star (*).
            files: 'allium-${{ matrix.target }}.zip'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        

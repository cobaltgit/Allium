[package]
name = "common"
version = "0.27.0"
edition = "2024"
license = "MIT"

[lib]
name = "common"
path = "src/lib.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
simulator = ["embedded-graphics-simulator", "sdl2"]
miyoo = ["evdev", "framebuffer", "sysfs_gpio"]

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
chrono = { workspace = true, features = ["serde"] }
embedded-graphics.workspace = true
enum-map.workspace = true
fluent-templates = { workspace = true, features = ["walkdir"], default-features = false }
image = { workspace = true, features = ["gif", "jpeg", "png"] }
itertools.workspace = true
lazy_static.workspace = true
log = { workspace = true, features = ["release_max_level_info"] }
nix = { workspace = true, features = ["ioctl"] }
rusqlite = { workspace = true, features = ["bundled", "chrono"] }
rusqlite_migration.workspace = true
rusttype.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
strum = { workspace = true, features = ["derive"] }
tokio = { workspace = true, features = ["full"] }
type-map.workspace = true
embedded-graphics-simulator = { workspace = true, optional = true }
sdl2 = { workspace = true, optional = true }
sysfs_gpio = { workspace = true, optional = true }
wait-timeout.workspace = true
evdev = { workspace = true, features = ["tokio"], optional = true }
framebuffer = { workspace = true, optional = true }
